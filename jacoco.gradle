apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.8'
}

tasks.withType(Test).configureEach {
    jacoco {
        enabled = true
    }
    // Launches the tests with coverage enabled
    finalizedBy jacocoTestReportBitmovinTesting
}

/**
 * This task generates the Jacoco report that is used by SonarQube.
 */
tasks.register('jacocoTestReportBitmovinTesting', JacocoReport) {
    dependsOn 'test'
    def coverageSourceDirs = ["src/main/java"]
    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*'
    ]
    def javaClasses = fileTree(
            dir: "$buildDir/intermediates/javac/debug/classes/com",
            excludes: fileFilter
    )
    def kotlinClasses = fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug/com",
            excludes: fileFilter
    )
    classDirectories.setFrom(files([javaClasses, kotlinClasses]))
    additionalSourceDirs.setFrom(files(coverageSourceDirs))
    sourceDirectories.setFrom(files(coverageSourceDirs))
    executionData.setFrom(fileTree(dir: "$buildDir/outputs/unit_test_code_coverage/debugUnitTest/", include: ['*.exec']))
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}
